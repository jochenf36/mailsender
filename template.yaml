Resources:
  AuthenticationServicemailboxUserPoolF3B236D1:
    Type: AWS::Cognito::UserPool
    Properties:
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_phone_number
            Priority: 1
          - Name: verified_email
            Priority: 2
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
      AliasAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      EmailVerificationMessage: The verification code to your new account is {####}
      EmailVerificationSubject: Verify your new account
      SmsVerificationMessage: The verification code to your new account is {####}
      VerificationMessageTemplate:
        DefaultEmailOption: CONFIRM_WITH_CODE
        EmailMessage: The verification code to your new account is {####}
        EmailSubject: Verify your new account
        SmsMessage: The verification code to your new account is {####}
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: MailSenderStack/Authentication Service/mailboxUserPool/Resource
  AuthenticationServicemailboxUserPoolmailboxwebclient5AF6ADD0:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId:
        Ref: AuthenticationServicemailboxUserPoolF3B236D1
      AllowedOAuthFlows:
        - implicit
        - code
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - profile
        - phone
        - email
        - openid
        - aws.cognito.signin.user.admin
      CallbackURLs:
        - https://example.com
      SupportedIdentityProviders:
        - COGNITO
    Metadata:
      aws:cdk:path: MailSenderStack/Authentication Service/mailboxUserPool/mailbox-web-client/Resource
  StorenotificationserviceuuidLayer5BB88CCE:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Content:
        S3Bucket:
          Ref: AssetParameters516995aefb62c0e546a0e99f79cc45a336492ff3bad58eb3713c7264a13281d3S3BucketA8301D0B
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters516995aefb62c0e546a0e99f79cc45a336492ff3bad58eb3713c7264a13281d3S3VersionKey4CE00665
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters516995aefb62c0e546a0e99f79cc45a336492ff3bad58eb3713c7264a13281d3S3VersionKey4CE00665
      CompatibleRuntimes:
        - nodejs14.x
      Description: uuid package
    Metadata:
      aws:cdk:path: MailSenderStack/Store notification service/uuidLayer/Resource
      aws:asset:path: /Users/jochen/workspace/easypost/mailsender-back/lambda/layers/uuidLayer/deployment.zip
      aws:asset:property: Content
  StorenotificationservicerawStore4E428D58:
    Type: AWS::S3::Bucket
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: MailSenderStack/Store notification service/rawStore/Resource
  StorenotificationservicerawStoreNotifications6531BE21:
    Type: Custom::S3BucketNotifications
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691
          - Arn
      BucketName:
        Ref: StorenotificationservicerawStore4E428D58
      NotificationConfiguration:
        LambdaFunctionConfigurations:
          - Events:
              - s3:ObjectCreated:*
            LambdaFunctionArn:
              Fn::GetAtt:
                - StorenotificationserviceStoreRawLinesC518714F
                - Arn
    DependsOn:
      - StorenotificationservicerawStoreAllowBucketNotificationsToMailSenderStackStorenotificationserviceStoreRawLines34DB0152F8FAC14A
    Metadata:
      aws:cdk:path: MailSenderStack/Store notification service/rawStore/Notifications/Resource
  StorenotificationservicerawStoreAllowBucketNotificationsToMailSenderStackStorenotificationserviceStoreRawLines34DB0152F8FAC14A:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - StorenotificationserviceStoreRawLinesC518714F
          - Arn
      Principal: s3.amazonaws.com
      SourceAccount:
        Ref: AWS::AccountId
      SourceArn:
        Fn::GetAtt:
          - StorenotificationservicerawStore4E428D58
          - Arn
    Metadata:
      aws:cdk:path: MailSenderStack/Store notification service/rawStore/AllowBucketNotificationsToMailSenderStackStorenotificationserviceStoreRawLines34DB0152
  StorenotificationserviceNotificationsB5211DFB:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: UUID
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: UUID
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: MailSenderStack/Store notification service/Notifications/Resource
  StorenotificationserviceStoreRawLinesServiceRole2EF89949:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: MailSenderStack/Store notification service/StoreRawLines/ServiceRole/Resource
  StorenotificationserviceStoreRawLinesServiceRoleDefaultPolicyB90A8DCB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - StorenotificationserviceNotificationsB5211DFB
                  - Arn
              - Ref: AWS::NoValue
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - StorenotificationservicerawStore4E428D58
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - StorenotificationservicerawStore4E428D58
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: StorenotificationserviceStoreRawLinesServiceRoleDefaultPolicyB90A8DCB
      Roles:
        - Ref: StorenotificationserviceStoreRawLinesServiceRole2EF89949
    Metadata:
      aws:cdk:path: MailSenderStack/Store notification service/StoreRawLines/ServiceRole/DefaultPolicy/Resource
  StorenotificationserviceStoreRawLinesC518714F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersb51aef39970fa5c2b6cd06ac7a346d63a202714de41119943975eed4eb75c9dfS3Bucket2A9F5AC9
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersb51aef39970fa5c2b6cd06ac7a346d63a202714de41119943975eed4eb75c9dfS3VersionKey098BC48D
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersb51aef39970fa5c2b6cd06ac7a346d63a202714de41119943975eed4eb75c9dfS3VersionKey098BC48D
      Role:
        Fn::GetAtt:
          - StorenotificationserviceStoreRawLinesServiceRole2EF89949
          - Arn
      Environment:
        Variables:
          BUCKET:
            Ref: StorenotificationservicerawStore4E428D58
          NOTIFICATION_TABLE_NAME:
            Ref: StorenotificationserviceNotificationsB5211DFB
      Handler: store_raw_lines.handler
      Layers:
        - Ref: StorenotificationserviceuuidLayer5BB88CCE
      Runtime: nodejs14.x
    DependsOn:
      - StorenotificationserviceStoreRawLinesServiceRoleDefaultPolicyB90A8DCB
      - StorenotificationserviceStoreRawLinesServiceRole2EF89949
    Metadata:
      aws:cdk:path: MailSenderStack/Store notification service/StoreRawLines/Resource
      aws:asset:path: /Users/jochen/workspace/easypost/mailsender-back/lambda
      aws:asset:property: Code
  BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: MailSenderStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource
  BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:PutBucketNotification
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
      Roles:
        - Ref: BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
    Metadata:
      aws:cdk:path: MailSenderStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource
  BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691:
    Type: AWS::Lambda::Function
    Properties:
      Description: AWS CloudFormation handler for "Custom::S3BucketNotifications" resources (@aws-cdk/aws-s3)
      Code:
        ZipFile: >-
          exports.handler = (event, context) => {
              // eslint-disable-next-line @typescript-eslint/no-require-imports, import/no-extraneous-dependencies
              const s3 = new (require('aws-sdk').S3)();
              // eslint-disable-next-line @typescript-eslint/no-require-imports
              const https = require('https');
              // eslint-disable-next-line @typescript-eslint/no-require-imports
              const url = require('url');
              log(JSON.stringify(event, undefined, 2));
              const props = event.ResourceProperties;
              if (event.RequestType === 'Delete') {
                  props.NotificationConfiguration = {}; // this is how you clean out notifications
              }
              const req = {
                  Bucket: props.BucketName,
                  NotificationConfiguration: props.NotificationConfiguration,
              };
              return s3.putBucketNotificationConfiguration(req, (err, data) => {
                  log({ err, data });
                  if (err) {
                      return submitResponse('FAILED', err.message + `\nMore information in CloudWatch Log Stream: ${context.logStreamName}`);
                  }
                  else {
                      return submitResponse('SUCCESS');
                  }
              });
              function log(obj) {
                  console.error(event.RequestId, event.StackId, event.LogicalResourceId, obj);
              }
              // eslint-disable-next-line max-len
              // adapted from https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-cfnresponsemodule
              // to allow sending an error message as a reason.
              function submitResponse(responseStatus, reason) {
                  const responseBody = JSON.stringify({
                      Status: responseStatus,
                      Reason: reason || 'See the details in CloudWatch Log Stream: ' + context.logStreamName,
                      PhysicalResourceId: event.PhysicalResourceId || event.LogicalResourceId,
                      StackId: event.StackId,
                      RequestId: event.RequestId,
                      LogicalResourceId: event.LogicalResourceId,
                      NoEcho: false,
                  });
                  log({ responseBody });
                  const parsedUrl = url.parse(event.ResponseURL);
                  const options = {
                      hostname: parsedUrl.hostname,
                      port: 443,
                      path: parsedUrl.path,
                      method: 'PUT',
                      headers: {
                          'content-type': '',
                          'content-length': responseBody.length,
                      },
                  };
                  const request = https.request(options, (r) => {
                      log({ statusCode: r.statusCode, statusMessage: r.statusMessage });
                      context.done();
                  });
                  request.on('error', (error) => {
                      log({ sendError: error });
                      context.done();
                  });
                  request.write(responseBody);
                  request.end();
              }
          };
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
          - Arn
      Runtime: nodejs10.x
      Timeout: 300
    DependsOn:
      - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
      - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
    Metadata:
      aws:cdk:path: MailSenderStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource
  PublishnotificationserviceNotificationQueue67E766B7:
    Type: AWS::SQS::Queue
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: MailSenderStack/Publish notification service/NotificationQueue/Resource
  PublishnotificationserviceCreateNotificationsFromDBHandlerServiceRole03F594C6:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: MailSenderStack/Publish notification service/CreateNotificationsFromDBHandler/ServiceRole/Resource
  PublishnotificationserviceCreateNotificationsFromDBHandlerServiceRoleDefaultPolicy362BF872:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - sqs:SendMessage
              - sqs:GetQueueAttributes
              - sqs:GetQueueUrl
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - PublishnotificationserviceNotificationQueue67E766B7
                - Arn
          - Action:
              - sqs:SendMessage
              - sqs:GetQueueAttributes
              - sqs:GetQueueUrl
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - PublishnotificationservicePublishNotificationDLQueue759727A0
                - Arn
          - Action: dynamodb:ListStreams
            Effect: Allow
            Resource: "*"
          - Action:
              - dynamodb:DescribeStream
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - StorenotificationserviceNotificationsB5211DFB
                - StreamArn
        Version: "2012-10-17"
      PolicyName: PublishnotificationserviceCreateNotificationsFromDBHandlerServiceRoleDefaultPolicy362BF872
      Roles:
        - Ref: PublishnotificationserviceCreateNotificationsFromDBHandlerServiceRole03F594C6
    Metadata:
      aws:cdk:path: MailSenderStack/Publish notification service/CreateNotificationsFromDBHandler/ServiceRole/DefaultPolicy/Resource
  PublishnotificationserviceCreateNotificationsFromDBHandler43AE0783:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersb51aef39970fa5c2b6cd06ac7a346d63a202714de41119943975eed4eb75c9dfS3Bucket2A9F5AC9
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersb51aef39970fa5c2b6cd06ac7a346d63a202714de41119943975eed4eb75c9dfS3VersionKey098BC48D
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersb51aef39970fa5c2b6cd06ac7a346d63a202714de41119943975eed4eb75c9dfS3VersionKey098BC48D
      Role:
        Fn::GetAtt:
          - PublishnotificationserviceCreateNotificationsFromDBHandlerServiceRole03F594C6
          - Arn
      Environment:
        Variables:
          QUEUE:
            Ref: PublishnotificationserviceNotificationQueue67E766B7
      Handler: create_notifications_from_db.handler
      Runtime: nodejs14.x
    DependsOn:
      - PublishnotificationserviceCreateNotificationsFromDBHandlerServiceRoleDefaultPolicy362BF872
      - PublishnotificationserviceCreateNotificationsFromDBHandlerServiceRole03F594C6
    Metadata:
      aws:cdk:path: MailSenderStack/Publish notification service/CreateNotificationsFromDBHandler/Resource
      aws:asset:path: /Users/jochen/workspace/easypost/mailsender-back/lambda
      aws:asset:property: Code
  PublishnotificationserviceCreateNotificationsFromDBHandlerDynamoDBEventSourceMailSenderStackStorenotificationserviceNotifications363E6924A2FB367B:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      FunctionName:
        Ref: PublishnotificationserviceCreateNotificationsFromDBHandler43AE0783
      BatchSize: 5
      BisectBatchOnFunctionError: true
      DestinationConfig:
        OnFailure:
          Destination:
            Fn::GetAtt:
              - PublishnotificationservicePublishNotificationDLQueue759727A0
              - Arn
      EventSourceArn:
        Fn::GetAtt:
          - StorenotificationserviceNotificationsB5211DFB
          - StreamArn
      MaximumRetryAttempts: 10
      StartingPosition: TRIM_HORIZON
    Metadata:
      aws:cdk:path: MailSenderStack/Publish notification service/CreateNotificationsFromDBHandler/DynamoDBEventSource:MailSenderStackStorenotificationserviceNotifications363E6924/Resource
  PublishnotificationservicePublishNotificationDLQueue759727A0:
    Type: AWS::SQS::Queue
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: MailSenderStack/Publish notification service/PublishNotificationDLQueue/Resource
  PublishnotificationservicePublishNotificationServiceRole4AE68C96:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: MailSenderStack/Publish notification service/PublishNotification/ServiceRole/Resource
  PublishnotificationservicePublishNotificationServiceRoleDefaultPolicy63E251C7:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - sqs:ReceiveMessage
              - sqs:ChangeMessageVisibility
              - sqs:GetQueueUrl
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - PublishnotificationserviceNotificationQueue67E766B7
                - Arn
          - Action:
              - ses:SendEmail
              - SES:SendRawEmail
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: PublishnotificationservicePublishNotificationServiceRoleDefaultPolicy63E251C7
      Roles:
        - Ref: PublishnotificationservicePublishNotificationServiceRole4AE68C96
    Metadata:
      aws:cdk:path: MailSenderStack/Publish notification service/PublishNotification/ServiceRole/DefaultPolicy/Resource
  PublishnotificationservicePublishNotificationB5314BE8:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersb51aef39970fa5c2b6cd06ac7a346d63a202714de41119943975eed4eb75c9dfS3Bucket2A9F5AC9
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersb51aef39970fa5c2b6cd06ac7a346d63a202714de41119943975eed4eb75c9dfS3VersionKey098BC48D
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersb51aef39970fa5c2b6cd06ac7a346d63a202714de41119943975eed4eb75c9dfS3VersionKey098BC48D
      Role:
        Fn::GetAtt:
          - PublishnotificationservicePublishNotificationServiceRole4AE68C96
          - Arn
      Handler: publish_notification.handler
      Runtime: nodejs14.x
    DependsOn:
      - PublishnotificationservicePublishNotificationServiceRoleDefaultPolicy63E251C7
      - PublishnotificationservicePublishNotificationServiceRole4AE68C96
    Metadata:
      aws:cdk:path: MailSenderStack/Publish notification service/PublishNotification/Resource
      aws:asset:path: /Users/jochen/workspace/easypost/mailsender-back/lambda
      aws:asset:property: Code
  PublishnotificationservicePublishNotificationSqsEventSourceMailSenderStackPublishnotificationserviceNotificationQueueFB6ED674862860E6:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      FunctionName:
        Ref: PublishnotificationservicePublishNotificationB5314BE8
      BatchSize: 10
      EventSourceArn:
        Fn::GetAtt:
          - PublishnotificationserviceNotificationQueue67E766B7
          - Arn
    Metadata:
      aws:cdk:path: MailSenderStack/Publish notification service/PublishNotification/SqsEventSource:MailSenderStackPublishnotificationserviceNotificationQueueFB6ED674/Resource
  RestServicelambdaApiLayer3BAD3507:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Content:
        S3Bucket:
          Ref: AssetParameterse4cdb7b2318453e82223e86a7165ffabcf887e855a957b7b964c8d007e661be4S3Bucket1FCE6B1E
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterse4cdb7b2318453e82223e86a7165ffabcf887e855a957b7b964c8d007e661be4S3VersionKey68CD0384
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterse4cdb7b2318453e82223e86a7165ffabcf887e855a957b7b964c8d007e661be4S3VersionKey68CD0384
      CompatibleRuntimes:
        - nodejs14.x
      Description: lambda API package
    Metadata:
      aws:cdk:path: MailSenderStack/RestService/lambdaApiLayer/Resource
      aws:asset:path: /Users/jochen/workspace/easypost/mailsender-back/lambda/layers/lambdaApiLayer/deployment.zip
      aws:asset:property: Content
  RestServiceapiLambdaServiceRole8A888033:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: MailSenderStack/RestService/apiLambda/ServiceRole/Resource
  RestServiceapiLambda38EBDC36:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersb51aef39970fa5c2b6cd06ac7a346d63a202714de41119943975eed4eb75c9dfS3Bucket2A9F5AC9
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersb51aef39970fa5c2b6cd06ac7a346d63a202714de41119943975eed4eb75c9dfS3VersionKey098BC48D
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersb51aef39970fa5c2b6cd06ac7a346d63a202714de41119943975eed4eb75c9dfS3VersionKey098BC48D
      Role:
        Fn::GetAtt:
          - RestServiceapiLambdaServiceRole8A888033
          - Arn
      Handler: rest_api.handler
      Layers:
        - Ref: RestServicelambdaApiLayer3BAD3507
      Runtime: nodejs14.x
    DependsOn:
      - RestServiceapiLambdaServiceRole8A888033
    Metadata:
      aws:cdk:path: MailSenderStack/RestService/apiLambda/Resource
      aws:asset:path: /Users/jochen/workspace/easypost/mailsender-back/lambda
      aws:asset:property: Code
  RestServicemyapi4840BD5F:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: myapi
    Metadata:
      aws:cdk:path: MailSenderStack/RestService/myapi/Resource
  RestServicemyapiCloudWatchRole769A9826:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: MailSenderStack/RestService/myapi/CloudWatchRole/Resource
  RestServicemyapiAccount140E171C:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - RestServicemyapiCloudWatchRole769A9826
          - Arn
    DependsOn:
      - RestServicemyapi4840BD5F
    Metadata:
      aws:cdk:path: MailSenderStack/RestService/myapi/Account
  RestServicemyapiDeployment6D54A96D32a17bdc1f33a10b1248c42a68506766:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: RestServicemyapi4840BD5F
      Description: Automatically created by the RestApi construct
    DependsOn:
      - RestServicemyapiproxyANY09AE8CD0
      - RestServicemyapiproxyA9812008
      - RestServicemyapiANY1394C70E
    Metadata:
      aws:cdk:path: MailSenderStack/RestService/myapi/Deployment/Resource
  RestServicemyapiDeploymentStageprod29BA39EA:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: RestServicemyapi4840BD5F
      DeploymentId:
        Ref: RestServicemyapiDeployment6D54A96D32a17bdc1f33a10b1248c42a68506766
      StageName: prod
    Metadata:
      aws:cdk:path: MailSenderStack/RestService/myapi/DeploymentStage.prod/Resource
  RestServicemyapiproxyA9812008:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - RestServicemyapi4840BD5F
          - RootResourceId
      PathPart: "{proxy+}"
      RestApiId:
        Ref: RestServicemyapi4840BD5F
    Metadata:
      aws:cdk:path: MailSenderStack/RestService/myapi/Default/{proxy+}/Resource
  RestServicemyapiproxyANYApiPermissionMailSenderStackRestServicemyapi401A4463ANYproxy15778917:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - RestServiceapiLambda38EBDC36
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RestServicemyapi4840BD5F
            - /
            - Ref: RestServicemyapiDeploymentStageprod29BA39EA
            - /*/*
    Metadata:
      aws:cdk:path: MailSenderStack/RestService/myapi/Default/{proxy+}/ANY/ApiPermission.MailSenderStackRestServicemyapi401A4463.ANY..{proxy+}
  RestServicemyapiproxyANYApiPermissionTestMailSenderStackRestServicemyapi401A4463ANYproxyDD2F6532:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - RestServiceapiLambda38EBDC36
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RestServicemyapi4840BD5F
            - /test-invoke-stage/*/*
    Metadata:
      aws:cdk:path: MailSenderStack/RestService/myapi/Default/{proxy+}/ANY/ApiPermission.Test.MailSenderStackRestServicemyapi401A4463.ANY..{proxy+}
  RestServicemyapiproxyANY09AE8CD0:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: ANY
      ResourceId:
        Ref: RestServicemyapiproxyA9812008
      RestApiId:
        Ref: RestServicemyapi4840BD5F
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - RestServiceapiLambda38EBDC36
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: MailSenderStack/RestService/myapi/Default/{proxy+}/ANY/Resource
  RestServicemyapiANYApiPermissionMailSenderStackRestServicemyapi401A4463ANYFEAA8669:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - RestServiceapiLambda38EBDC36
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RestServicemyapi4840BD5F
            - /
            - Ref: RestServicemyapiDeploymentStageprod29BA39EA
            - /*/
    Metadata:
      aws:cdk:path: MailSenderStack/RestService/myapi/Default/ANY/ApiPermission.MailSenderStackRestServicemyapi401A4463.ANY..
  RestServicemyapiANYApiPermissionTestMailSenderStackRestServicemyapi401A4463ANYA3A97D97:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - RestServiceapiLambda38EBDC36
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: RestServicemyapi4840BD5F
            - /test-invoke-stage/*/
    Metadata:
      aws:cdk:path: MailSenderStack/RestService/myapi/Default/ANY/ApiPermission.Test.MailSenderStackRestServicemyapi401A4463.ANY..
  RestServicemyapiANY1394C70E:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: ANY
      ResourceId:
        Fn::GetAtt:
          - RestServicemyapi4840BD5F
          - RootResourceId
      RestApiId:
        Ref: RestServicemyapi4840BD5F
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - RestServiceapiLambda38EBDC36
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: MailSenderStack/RestService/myapi/Default/ANY/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=1.93.0,@aws-cdk/assets=1.93.0,@aws-cdk/aws-apigateway=1.93.0,@aws-cdk/aws-applicationautoscaling=1.93.0,@aws-cdk/aws-autoscaling-common=1.93.0,@aws-cdk/aws-cloudwatch=1.93.0,@aws-cdk/aws-codeguruprofiler=1.93.0,@aws-cdk/aws-cognito=1.93.0,@aws-cdk/aws-dynamodb=1.93.0,@aws-cdk/aws-ec2=1.93.0,@aws-cdk/aws-ecr=1.93.0,@aws-cdk/aws-ecr-assets=1.93.0,@aws-cdk/aws-events=1.93.0,@aws-cdk/aws-iam=1.93.0,@aws-cdk/aws-kms=1.93.0,@aws-cdk/aws-lambda=1.93.0,@aws-cdk/aws-lambda-event-sources=1.93.0,@aws-cdk/aws-logs=1.93.0,@aws-cdk/aws-s3=1.93.0,@aws-cdk/aws-s3-assets=1.93.0,@aws-cdk/aws-s3-notifications=1.93.0,@aws-cdk/aws-sns=1.93.0,@aws-cdk/aws-sns-subscriptions=1.93.0,@aws-cdk/aws-sqs=1.93.0,@aws-cdk/aws-ssm=1.93.0,@aws-cdk/cloud-assembly-schema=1.93.0,@aws-cdk/core=1.93.0,@aws-cdk/custom-resources=1.93.0,@aws-cdk/cx-api=1.93.0,@aws-cdk/region-info=1.93.0,jsii-runtime=node.js/v10.15.0
    Metadata:
      aws:cdk:path: MailSenderStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  AssetParameters516995aefb62c0e546a0e99f79cc45a336492ff3bad58eb3713c7264a13281d3S3BucketA8301D0B:
    Type: String
    Description: S3 bucket for asset "516995aefb62c0e546a0e99f79cc45a336492ff3bad58eb3713c7264a13281d3"
  AssetParameters516995aefb62c0e546a0e99f79cc45a336492ff3bad58eb3713c7264a13281d3S3VersionKey4CE00665:
    Type: String
    Description: S3 key for asset version "516995aefb62c0e546a0e99f79cc45a336492ff3bad58eb3713c7264a13281d3"
  AssetParameters516995aefb62c0e546a0e99f79cc45a336492ff3bad58eb3713c7264a13281d3ArtifactHash4C70CC63:
    Type: String
    Description: Artifact hash for asset "516995aefb62c0e546a0e99f79cc45a336492ff3bad58eb3713c7264a13281d3"
  AssetParametersb51aef39970fa5c2b6cd06ac7a346d63a202714de41119943975eed4eb75c9dfS3Bucket2A9F5AC9:
    Type: String
    Description: S3 bucket for asset "b51aef39970fa5c2b6cd06ac7a346d63a202714de41119943975eed4eb75c9df"
  AssetParametersb51aef39970fa5c2b6cd06ac7a346d63a202714de41119943975eed4eb75c9dfS3VersionKey098BC48D:
    Type: String
    Description: S3 key for asset version "b51aef39970fa5c2b6cd06ac7a346d63a202714de41119943975eed4eb75c9df"
  AssetParametersb51aef39970fa5c2b6cd06ac7a346d63a202714de41119943975eed4eb75c9dfArtifactHash9DA20AAF:
    Type: String
    Description: Artifact hash for asset "b51aef39970fa5c2b6cd06ac7a346d63a202714de41119943975eed4eb75c9df"
  AssetParameterse4cdb7b2318453e82223e86a7165ffabcf887e855a957b7b964c8d007e661be4S3Bucket1FCE6B1E:
    Type: String
    Description: S3 bucket for asset "e4cdb7b2318453e82223e86a7165ffabcf887e855a957b7b964c8d007e661be4"
  AssetParameterse4cdb7b2318453e82223e86a7165ffabcf887e855a957b7b964c8d007e661be4S3VersionKey68CD0384:
    Type: String
    Description: S3 key for asset version "e4cdb7b2318453e82223e86a7165ffabcf887e855a957b7b964c8d007e661be4"
  AssetParameterse4cdb7b2318453e82223e86a7165ffabcf887e855a957b7b964c8d007e661be4ArtifactHashFA3E93A5:
    Type: String
    Description: Artifact hash for asset "e4cdb7b2318453e82223e86a7165ffabcf887e855a957b7b964c8d007e661be4"
Outputs:
  RestServicemyapiEndpoint2F80C40F:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: RestServicemyapi4840BD5F
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: RestServicemyapiDeploymentStageprod29BA39EA
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

